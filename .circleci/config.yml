# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
references:
  container: &container
    docker:
      - image: circleci/python:2.7.13
      - name: localstack
        image: localstack/localstack
    working_directory: ~/repo
  # Download and cache dependencies
  restore_cache: &restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
  save_cache: &save_cache
    save_cache:
      paths:
        - ./venv
      key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

jobs:
  build:
    <<: *container
    steps:
      - checkout
      - *restore_cache
      - run:
          name: install dependencies
          command: |
            pip install virtualenv
            virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
      - *save_cache
      - run:
          name: run tests
          environment:
            LOCALSTACK_HOST: localstack
          command: |
            . venv/bin/activate
            # CUMULUS_ENV=testing nosetests -v -s

  release:
    <<: *container
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Push tag to github
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            VERSION=`awk -F\' '{print $2,$4}' message_adapter/version.py`
            if ![ $(git tag -l "$VERSION") ];
            then
                git tag $VERSION
                git push origin $VERSION
                curl -X POST -u "cumulusgit:${CUMULUSGIT_GITHUB_API_ACCESS_TOKEN}" \
                  https://api.github.com/repos/cumulus-nasa/cumulus-message-adapter/releases \
                  --data '{"tag_name": "$VERSION"}'
            fi
            make clean
            make cumulus-message-adapter.zip
            UPLOAD_URL_TEMPLATE=$(curl https://api.github.com/repos/cumulus-nasa/cumulus-message-adapter/releases/tags/v0.0.2 | jq '.upload_url')
            UPLOAD_URL="${UPLOAD_URL_TEMPLATE//{?name,label\}/?name=cumulus-message-adapter.zip}"
            curl -X POST -u "cumulusgit:${CUMULUSGIT_GITHUB_API_ACCESS_TOKEN}" \
              -H "Content-Type: application/zip" \
              --data @./cumulus-message-adapter.zip $UPLOAD_URL

workflows:
  version: 2
  build_test_release:
    jobs:
      #- build
      - release:
          # requires:
          #   - build
          filters:
            branches:
              only: abarciauskas-bgse_ci-build-release
